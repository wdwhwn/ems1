<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:component-scan base-package="com.baizhi.service"></context:component-scan>

	<!-- 1.加载小配置文件 -->
	<!--<context:property-placeholder location="classpath:db.properties"/>-->

	<!-- 2.创建连接池/数据源 -->
	<!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
		<!--<property name="driverClassName" value="${jdbc.driver}"></property>-->
		<!--<property name="url" value="${jdbc.url}"></property>-->
		<!--<property name="username" value="${jdbc.username}"></property>-->
		<!--<property name="password" value="${jdbc.password}"></property>-->
	<!--</bean>-->

	<!-- 3.创建sqlSessionFactory对象 -->
	<!--
    3.1注入数据源
    3.2加载映射文件
    3.3给实体类起别名
     -->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" >
			<list>
				<value>classpath:com/baizhi/user/dao/*Mapper.xml</value>
			</list>
		</property>

		<property name="typeAliasesPackage" value="com.baizhi.user.entity"></property>
	</bean>-->

	<!-- 声明式事务处理 -->
	<!-- 1.通过连接池，配置事务管理器 -->
	<!-- 2.通过事务管理器，tx标签；定义事务增强；指定事务规则 -->
	<!-- 3.定义切入点；定位到service层中的方法 -->
	<!-- 4.做编织处理 -->

	<!--<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="txManager">-->
		<!--<property name="dataSource" ref="dataSource"></property>-->
	<!--</bean>-->

	<!--<tx:advice id="txAdvice" transaction-manager="txManager">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="get*" read-only="true"/>-->
			<!--<tx:method name="set*" read-only="true"/>-->
			<!--<tx:method name="*" propagation="REQUIRED"/>-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->

	<!--<aop:config>-->
		<!--<aop:pointcut expression="execution(* com.baizhi.service.*.*(..))" id="servicePointcut"/>-->
		<!--<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>-->
	<!--</aop:config>-->
	<!-- 声明式事务处理 ============END================-->

	<!-- 4.创建dao对象 默认id为首字母小写接口名-->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.baizhi.user.dao"></property>
	</bean>-->

	<mongo:mongo-client host="192.168.85.159" port="28000" id="mongoClient"></mongo:mongo-client>

	<!-- 数据库工厂配置 -->
	<mongo:db-factory dbname="baizhi" mongo-ref="mongoClient" id="mongoDbFactory"/>

	<!-- 操作的核心对象-->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
	</bean>

	<!--提供方应用信息，用于计算依赖关系-->
	<dubbo:application name="hello-world-app"/>
	<!--使用zik注册中心暴露服务地址-->
	<dubbo:registry protocol="zookeeper" address="192.168.85.154:2181"/>
	<!--dubbo的端口号-->
	<dubbo:protocol name="dubbo" port="20881"></dubbo:protocol>
	<!--dubbo接口信息-->
	<dubbo:service    interface="com.baizhi.service.TestA" ref="testAService"/>
	<!--管理实现类-->
	<bean id="testAService" class="com.baizhi.service.TestAImpl">
		<constructor-arg index="0" ref="mongoTemplate"></constructor-arg>
	</bean>
</beans>

